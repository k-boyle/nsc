native import std.stdio;

//std.stdio
native Nothing writeln(Int a);
native Nothing writeln(Double a);

//dfunctions
native Int add(Int a, Int b);
native Int integerDivision(Int a, Int b);
native Double doubleDivision(Double a, Double b);
native Double intToDouble(Int a);
native Nothing assignInt(Int* a, Int b);
native Nothing assignDouble(Double* a, Double b);

Int main() {
    Int a;
    Double b;
    a := (10+20);
    b := 20.3;
    a!;
    b!;
    b := (200+300);
    b!;

    0.0!;
    a := (5/2);
    b := (5/2);
    a!;
    b!;

    0.0!;
    //Example of making an ambiguous expression non-ambiguous
    Int intType;
    Double doubleType;
    ((5/2)::intType)!;
    ((5/2)::doubleType)!;

    0;
};

Int infix_+_(Int a, Int b) {
    add(a,b);
};
Double infix_+_(Int a, Int b) {
    intToDouble(add(a,b));
};

Int infix_/_(Int a, Int b) {
    integerDivision(a,b);
};

Double infix_/_(Int a, Int b) {
    doubleDivision(intToDouble(a), intToDouble(b));
};

Int infix_::_(Int a, Int b) {
    a;
};
Double infix_::_(Double a, Double b) {
    a;
};

Nothing postfix_!_(Int a) {
    writeln(a);
};
Nothing postfix_!_(Double a) {
    writeln(a);
};

Nothing infix_:=_(Int* a, Int b) {
    assignInt(a,b);
};
Nothing infix_:=_(Double* a, Double b) {
    assignDouble(a,b);
};

